services:
  test: &base
    build:
      context: ./
      target: dev
    image: hawkeye-test
    command: go test -v ./...
    volumes:
      - .:/go/src/github.com/michelsazevedo/hawkeye/
    depends_on:
      - elasticsearch
      - nats
      - prometheus
      - grafana
      - jaeger
    stdin_open: true
    tty: true
    environment:
      - ELASTICSEARCH_URL=http://es:9200
      - NATS_URL=nats://nats:4222

  web:
    <<: *base
    image: hawkeye_web
    container_name: hawkeye
    command: go run cmd/main.go
    healthcheck:
      test: ["CMD", "curl", "-f", "http://courses.hawkeye.local:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "80:8080"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    restart: always
    container_name: es
    environment:
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - transport.host=0.0.0.0
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - 9201:9200
      - 9301:9300

  nats:
    image: nats:latest
    restart: unless-stopped
    container_name: nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "--http_port 8222"
    hostname: nats

  prometheus:
    image: prom/prometheus:v2.55.0
    restart: unless-stopped
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./docker/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    
  grafana:
    image: grafana/grafana:11.3.0
    restart: unless-stopped
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - 3000:3000

  jaeger:
    image: jaegertracing/all-in-one
    restart: unless-stopped
    container_name: jaeger
    ports:
      - "16686:16686"
      - "4318:4318"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

volumes:
  elastic_data:
  grafana_data:
  prometheus_data:
